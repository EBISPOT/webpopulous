package uk.ac.ebi.spot.webulous.service;

import org.semanticweb.owlapi.model.*;
import uk.ac.ebi.spot.webulous.entity.IterativeAutoIDGenerator;
import uk.ac.ebi.spot.webulous.entity.SimpleEntityCreation;
import uk.ac.ebi.spot.webulous.impl.SimplePopulousTemplate;
import uk.ac.ebi.spot.webulous.model.*;

import java.net.URL;
import java.util.*;

/**
 * @author Simon Jupp
 * @date 26/03/2015
 * Samples, Phenotypes and Ontologies Team, EMBL-EBI
 */
public class TestOpplPatternExecutionService {

    private SimplePopulousTemplate document;

    public TestOpplPatternExecutionService() {
        System.out.println("init");
    }
//    @Before
    public void setUp(){
        System.out.println("creating a new teamplate");
        document = new SimplePopulousTemplate();
        document.setDescription("Pizza template");
        document.setActive(true);
        document.setAdminEmailAddresses("simon.jupp@gmail.com");
        document.setActiveOntology("http://www.test.com/test.owl");
        Set<String> ontologyImports= new HashSet<String>();
        URL ontologyURL = getClass().getClassLoader().getResource("pizza.owl");

        assert ontologyURL != null;
        ontologyImports.add(ontologyURL.toString());
//        ontologyImports.add("file:/Users/jupp/Dropbox/dev/ols/ontology-tools/src/test/resources/test-import-2.owl");

        document.setOntologyImports(ontologyImports);
//        document.setLastUpdated(new Date());
//        document.setStatus(Status.OK);



        PopulousDataRestriction dr1 = new PopulousDataRestriction(1, "Pizza");
//        dr1.setClassExpression("A");
        dr1.setVariableName("?pizza");
        dr1.setRestrictionType(RestrictionType.UNRESTRICTED);

        PopulousDataRestriction dr2 = new PopulousDataRestriction(2, "Fish toppings");
        dr2.setVariableName("?fishTopping");
        dr2.setRestrictionType(RestrictionType.DESCENDANTS);
        dr2.setClassExpression("SeafoodTopping");
        String[][] fishValues = new String[2][2];
        fishValues[0][0] = "http://www.pizza.com/ontologies/pizza.owl#AnchovyTopping";
        fishValues[0][1] = "AnchovyTopping";
        fishValues[1][0] = "http://www.pizza.com/ontologies/pizza.owl#PrawnTopping";
        fishValues[1][1] = "PrawnTopping";
        dr2.setValues(fishValues);

        PopulousDataRestriction dr3 = new PopulousDataRestriction(3, "Meat toppings");
        dr3.setVariableName("?meatTopping");
        dr3.setClassExpression("MeatTopping");
        dr3.setRestrictionType(RestrictionType.DESCENDANTS);
        String[][] meatValues = new String[2][2];
        meatValues[0][0] = "http://www.pizza.com/ontologies/pizza.owl#HamTopping";
        meatValues[0][1] = "HamTopping";
        meatValues[1][0] = "http://www.pizza.com/ontologies/pizza.owl#SalamiTopping";
        meatValues[1][1] = "SalamiTopping";
        dr3.setValues(meatValues);


        List<PopulousDataRestriction> restrictionSet = new ArrayList<PopulousDataRestriction>();
        restrictionSet.add(dr1);
        restrictionSet.add(dr2);
        restrictionSet.add(dr3);
        document.setDataRestrictions(restrictionSet);

        PopulousPattern populousPattern1 = new PopulousPattern();
        populousPattern1.setPatternName("Meat topping pattern");
        populousPattern1.setPatternValue("?pizza:CLASS,\n?meatTopping:CLASS\nBEGIN\nADD ?pizza subClassOf hasTopping some ?meatTopping\nEND;\n");

        PopulousPattern populousPattern2 = new PopulousPattern();
        populousPattern2.setPatternName("Fish topping pattern");
        populousPattern2.setPatternValue("?pizza:CLASS,\n?fishTopping:CLASS\nBEGIN\nADD ?pizza subClassOf hasTopping some ?fishTopping\nEND;\n");

        List<PopulousPattern> patterns = new ArrayList<PopulousPattern>();
        patterns.add(populousPattern1);
        patterns.add(populousPattern2);
        document.setPatterns(patterns);



    }

//    @Test
    public void testOPPLscriptGeneration(){


        OpplPatternExecutionService service = new OpplPatternExecutionService();
        List<String> errorCollector = new ArrayList<String>();
        String[][] data = new String[2][3];
        data[0][0] = "Prawn and ham pizza";
        data[0][1] = "PrawnTopping";
        data[0][2] = "HamTopping";
        data[1][0] = "Anchovy and salami pizza";
        data[1][1] = "AnchovyTopping";
        data[1][2] = "SalamiTopping";

        SimpleEntityCreation entityCreation = new SimpleEntityCreation();
        entityCreation.setFragmentAutoGenerated(true);
        entityCreation.setAutoIDDigitCount(6);
        entityCreation.setAutoIDStart(1);
        entityCreation.setAutoIDEnd(10);

        entityCreation.setDefaultBaseURI("http://webulous.com/ontology");
        entityCreation.setAutoIDGeneratorClass(IterativeAutoIDGenerator.class);
        try {
            OWLOntology ontology = service.executeOPPLPatterns(data, document, entityCreation, errorCollector);
            OWLOntologyManager manager = ontology.getOWLOntologyManager();
            try {
                manager.saveOntology(ontology, IRI.create("file:/Users/jupp/Dropbox/dev/webpopulous/populous-oppl/src/test/resources/new.owl"));
            } catch (OWLOntologyStorageException e) {
                e.printStackTrace();
            }

            if (!errorCollector.isEmpty())  {
                for (String error : errorCollector) {
                    System.out.println("errors: "  +error);
                }
            }
        } catch (OWLOntologyCreationException e) {
            e.printStackTrace();
        }

    }

    public static void main(String[] args) {
        TestOpplPatternExecutionService oppl = new TestOpplPatternExecutionService();
        oppl.setUp();
        oppl.testOPPLscriptGeneration();
    }

}
